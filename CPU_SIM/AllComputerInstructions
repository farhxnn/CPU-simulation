<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="kriti_kwatra sec-a machine" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OPR" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Fieldaf6140">
	</Field>
	<Field name="ADD" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field36b0d7">
	</Field>
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field10f1a8d">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Registerebabb2" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register17b74ce" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register8ed1fe" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register1106d50" />
	<Register name="FGI" width="1" initialValue="0" readOnly="false" id="model.module.Register21fd3b" />
	<Register name="FGO" width="1" initialValue="0" readOnly="false" id="model.module.Registerc829f5" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register1502b3" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register3850c" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register1ac7592" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Registerc53356" />
	<Register name="STATUS" width="3" initialValue="0" readOnly="false" id="model.module.Register2ddff9" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register12a1355" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="HALT-BIT" bit="0" register="model.module.Register2ddff9" halt="true" id="model.module.ConditionBit2e4446" />

	<!--............. rams ..........................-->
	<RAM name="MAIN MEMORY" length="4096" cellSize="16" id="model.module.RAM11681d6" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Registerebabb2" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet1da1016" />
	<Set name="E&lt;-0" register="model.module.Register1106d50" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet5d13f6" />
	<Set name="FGI&lt;-0" register="model.module.Register21fd3b" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet4836d6" />
	<Set name="FGO&lt;-0" register="model.module.Registerc829f5" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet1855f1d" />
	<Set name="S&lt;-0" register="model.module.Registerc53356" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet18a4db" />

	<!--............. test ..........................-->
	<Test name="if AC is not zero" register="model.module.Registerebabb2" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test22dc0d" />
	<Test name="if AC(15) is 0" register="model.module.Registerebabb2" start="15" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test141a2d9" />
	<Test name="if AC(15) is 1" register="model.module.Registerebabb2" start="15" numBits="1" comparison="EQ" value="1" omission="1" id="model.microinstruction.Test1d7d5b" />
	<Test name="if DR is not 0 then skip" register="model.module.Register8ed1fe" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test12a2eff" />
	<Test name="if E is 0" register="model.module.Register1106d50" start="0" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test1ca4863" />
	<Test name="if FGI is 1" register="model.module.Register21fd3b" start="0" numBits="1" comparison="EQ" value="1" omission="1" id="model.microinstruction.Test13961a9" />
	<Test name="if FGO is 1" register="model.module.Registerc829f5" start="0" numBits="1" comparison="EQ" value="1" omission="1" id="model.microinstruction.Testad33b0" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;AC+1" register="model.module.Registerebabb2" delta="1" id="model.microinstruction.Increment20b40c" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register17b74ce" delta="1" id="model.microinstruction.Increment1587bbb" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register8ed1fe" delta="1" id="model.microinstruction.Increment1a06e90" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register1ac7592" delta="1" id="model.microinstruction.Increment9dfca7" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-SHLAC" type="cyclic" source="model.module.Registerebabb2" destination="model.module.Registerebabb2" direction="left" distance="1" id="model.microinstruction.Shifte20f17" />
	<Shift name="AC&lt;-SHRAC" type="cyclic" source="model.module.Registerebabb2" destination="model.module.Registerebabb2" direction="right" distance="1" id="model.microinstruction.Shiftd9b67f" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-!AC" type="NOT" source1="model.module.Registerebabb2" source2="model.module.Registerebabb2" destination="model.module.Registerebabb2" id="model.microinstruction.Logicale1e43e" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Registerebabb2" source2="model.module.Register8ed1fe" destination="model.module.Registerebabb2" id="model.microinstruction.Logical1d23db4" />
	<Logical name="E&lt;-!E" type="NOT" source1="model.module.Register1106d50" source2="model.module.Register1106d50" destination="model.module.Register1106d50" id="model.microinstruction.Logical1ffd77f" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Registerebabb2" source2="model.module.Register8ed1fe" destination="model.module.Registerebabb2" id="model.microinstruction.Arithmetic9d5858" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register1106d50" srcStartBit="0" dest="model.module.Registerebabb2" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR1a68061" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register1106d50" srcStartBit="0" dest="model.module.Registerebabb2" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR1eb313c" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register8ed1fe" srcStartBit="0" dest="model.module.Registerebabb2" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR2c4751" />
	<TransferRtoR name="AR&lt;-IR" source="model.module.Register3850c" srcStartBit="4" dest="model.module.Register17b74ce" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoRf98dd4" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register1ac7592" srcStartBit="0" dest="model.module.Register17b74ce" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR1f3bc22" />
	<TransferRtoR name="AR&lt;-TR" source="model.module.Register12a1355" srcStartBit="4" dest="model.module.Register17b74ce" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR1210631" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Registerebabb2" srcStartBit="0" dest="model.module.Register1106d50" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR13fc04b" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Registerebabb2" srcStartBit="15" dest="model.module.Register1106d50" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR1846455" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register17b74ce" srcStartBit="0" dest="model.module.Register1ac7592" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR197e43b" />
	<TransferRtoR name="TR&lt;-PC" source="model.module.Register1ac7592" srcStartBit="0" dest="model.module.Register12a1355" destStartBit="4" numBits="12" id="model.microinstruction.TransferRtoR1c99050" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR(0)" ir="model.module.Register17b74ce" id="model.microinstruction.Decodeaf419b" />
	<Decode name="DECODE IR(0-3)" ir="model.module.Register3850c" id="model.microinstruction.Decode19a90c" />
	<Decode name="DECODE IR(1-3)" ir="model.module.Register3850c" id="model.microinstruction.Decodee73b88" />
	<Decode name="DECODE IR(4-15)" ir="model.module.Registerebabb2" id="model.microinstruction.Decode1ef7154" />

	<!--............. set condition bit .............-->
	<SetCondBit name="SET-HALT-BIT" bit="model.module.ConditionBit2e4446" value="1" id="model.microinstruction.SetCondBit11652ab" />

	<!--............. io ............................-->
	<IO name="INPR" direction="input" type="integer" buffer="model.module.Registerebabb2" connection="[Console]" id="model.microinstruction.IO4ed8cc" />
	<IO name="OUTR" direction="output" type="integer" buffer="model.module.Registerebabb2" connection="[Console]" id="model.microinstruction.IO1c08bb6" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM11681d6" data="model.module.Register8ed1fe" address="model.module.Register17b74ce" id="model.microinstruction.MemoryAccess1113a0b" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM11681d6" data="model.module.Register3850c" address="model.module.Register17b74ce" id="model.microinstruction.MemoryAccessb5a008" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM11681d6" data="model.module.Registerebabb2" address="model.module.Register17b74ce" id="model.microinstruction.MemoryAccessd7872a" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM11681d6" data="model.module.Register8ed1fe" address="model.module.Register17b74ce" id="model.microinstruction.MemoryAccess1672bbd" />
	<MemoryAccess name="M[AR]&lt;-TR" direction="write" memory="model.module.RAM11681d6" data="model.module.Register12a1355" address="model.module.Register17b74ce" id="model.microinstruction.MemoryAccess1b28778" />
	<MemoryAccess name="TR&lt;-M[AR]" direction="read" memory="model.module.RAM11681d6" data="model.module.Register12a1355" address="model.module.Register17b74ce" id="model.microinstruction.MemoryAccess10dfa6" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End12e999" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR1f3bc22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessb5a008" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRf98dd4" />
		<Microinstruction microRef="model.microinstruction.Decode19a90c" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="IOF" opcode="f040" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#cdd9b1" assemblyColors="#cdd9b1" >
	</MachineInstruction>

	<MachineInstruction name="ION" opcode="f080" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#93dbc0" assemblyColors="#93dbc0" >
	</MachineInstruction>

	<MachineInstruction name="SKO" opcode="f100" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#d5e6df" assemblyColors="#d5e6df" >
		<Microinstruction microRef="model.microinstruction.Testad33b0" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="SKI" opcode="f200" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#ee99c4" assemblyColors="#ee99c4" >
		<Microinstruction microRef="model.microinstruction.Test13961a9" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#84acf5" assemblyColors="#84acf5" >
		<Microinstruction microRef="model.microinstruction.IO1c08bb6" />
		<Microinstruction microRef="model.microinstruction.CpusimSet1855f1d" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#abb48f" assemblyColors="#abb48f" >
		<Microinstruction microRef="model.microinstruction.IO4ed8cc" />
		<Microinstruction microRef="model.microinstruction.CpusimSet4836d6" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#a6dfeb" assemblyColors="#a6dfeb" >
		<Microinstruction microRef="model.microinstruction.SetCondBit11652ab" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#d7ddb8" assemblyColors="#d7ddb8" >
		<Microinstruction microRef="model.microinstruction.Test1ca4863" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#a2dfef" assemblyColors="#a2dfef" >
		<Microinstruction microRef="model.microinstruction.Test141a2d9" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#a69fde" assemblyColors="#a69fde" >
		<Microinstruction microRef="model.microinstruction.Test1d7d5b" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#b9e396" assemblyColors="#b9e396" >
		<Microinstruction microRef="model.microinstruction.Test141a2d9" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#bd91c4" assemblyColors="#bd91c4" >
		<Microinstruction microRef="model.microinstruction.Increment20b40c" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#ebf0e6" assemblyColors="#ebf0e6" >
		<Microinstruction microRef="model.microinstruction.Shifte20f17" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#aa89b9" assemblyColors="#aa89b9" >
		<Microinstruction microRef="model.microinstruction.Shiftd9b67f" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#c7d4fc" assemblyColors="#c7d4fc" >
		<Microinstruction microRef="model.microinstruction.Logical1ffd77f" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#b2abb0" assemblyColors="#b2abb0" >
		<Microinstruction microRef="model.microinstruction.Logicale1e43e" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#96a6f3" assemblyColors="#96a6f3" >
		<Microinstruction microRef="model.microinstruction.CpusimSet5d13f6" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="OPR" assemblyFormat="OPR" instructionColors="#969f8e" assemblyColors="#969f8e" >
		<Microinstruction microRef="model.microinstruction.CpusimSet1da1016" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="ISZ_I" opcode="d" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#bd9692 #88cfa1" assemblyColors="#bd9692 #88cfa1" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess10dfa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1113a0b" />
		<Microinstruction microRef="model.microinstruction.Increment1a06e90" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1672bbd" />
		<Microinstruction microRef="model.microinstruction.Test12a2eff" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="b" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#d0f7e2 #afebdd" assemblyColors="#d0f7e2 #afebdd" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess10dfa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1c99050" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1b28778" />
		<Microinstruction microRef="model.microinstruction.Increment1587bbb" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR197e43b" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="9" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#d9fdc3 #8a9b98" assemblyColors="#d9fdc3 #8a9b98" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess10dfa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR197e43b" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="7" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#f687fa #d2adf1" assemblyColors="#f687fa #d2adf1" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess10dfa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessd7872a" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="5" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#9288f5 #e4e9e8" assemblyColors="#9288f5 #e4e9e8" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess10dfa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1113a0b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2c4751" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="3" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#bb8dce #aefd95" assemblyColors="#bb8dce #aefd95" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1b28778" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.Arithmetic9d5858" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="1" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#8ef1d5 #d89bbd" assemblyColors="#8ef1d5 #d89bbd" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess10dfa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1210631" />
		<Microinstruction microRef="model.microinstruction.Logical1d23db4" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="c" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#acf6cd #a3f5f6" assemblyColors="#acf6cd #a3f5f6" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1113a0b" />
		<Microinstruction microRef="model.microinstruction.Increment1a06e90" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1672bbd" />
		<Microinstruction microRef="model.microinstruction.Test12a2eff" />
		<Microinstruction microRef="model.microinstruction.Increment9dfca7" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="a" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#98f3a7 #829eba" assemblyColors="#98f3a7 #829eba" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR1c99050" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1b28778" />
		<Microinstruction microRef="model.microinstruction.Increment1587bbb" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR197e43b" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="8" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#d7b3ab #8a8cd3" assemblyColors="#d7b3ab #8a8cd3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR197e43b" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="6" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#d6dde8 #e7aabc" assemblyColors="#d6dde8 #e7aabc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccessd7872a" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="4" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#89ba8c #feb78d" assemblyColors="#89ba8c #feb78d" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1113a0b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2c4751" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="2" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#86e9fb #8c93e2" assemblyColors="#86e9fb #8c93e2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1113a0b" />
		<Microinstruction microRef="model.microinstruction.Arithmetic9d5858" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP ADD" assemblyFormat="OP ADD" instructionColors="#f4a1f7 #eba4fa" assemblyColors="#f4a1f7 #eba4fa" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1113a0b" />
		<Microinstruction microRef="model.microinstruction.Logical1d23db4" />
		<Microinstruction microRef="model.microinstruction.End12e999" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM11681d6" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
